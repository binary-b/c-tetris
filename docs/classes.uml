@startuml
'scale 2.0

'skinparam handwritten true
skinparam defaultFontName Monospace
skinparam classFontSize 18
skinparam defaultFontSize 14

interface Class {
	size_t size;
	{abstract} Object ctor ( Class class, va_list *app );
	{abstract} void dtor ();
	{abstract} Object clone ( Class obj );
	{abstract} bool differ ( Object obj1, Object obj2 );
	size_t sizeOf ( Object obj );
	void *typeOf ( Object obj );
}

class Object {
	new ( Class * );
}
class List {
	long length;
	new ();
	int addItem (Object obj);
	Object getItem (int id);
	bool rmItem (int id);
	void apply ( void (*f) (int id, void *obj) );
}
class Stack {
	long height;
	new ();
	bool put ( Object obj );
	void *getTop ();
	void rmTop ();
}

package event {
	enum mouse_button {
		MOUSE_NONE,
		MOUSE_RIGHT,
		MOUSE_LEFT,
		MOUSE_MIDDLE
	}
	enum direction {
		UP,
		DOWN,
		RIGHT,
		LEFT,
		CLOCKWISE,
		COURTER_CLOCKWISE
	}
	class Event {
		enum events type;
	}
	class MouseEvent {
		
	}
	class KeyboardEvent {
	}
}
package gui {
	package "struct" {
		class Pos <<(S,#fcd40a)>> {
			int x;
			int y;
		}
		class Rect <<(S,#fcd40a)>> {
			int x;
			int y;
			int width;
			int height;
		}
	}

	interface GUIObj {
		{abstract} void draw ( GUIObj obj );
		{abstract} int update ( GUIObj obj );
	}
	class Window {
		Stack<View> views;
		Pos pos;
		Rect rect;
		new ( Rect rect );
		void addView ( View view );
	}
	class View {
		Rect rect;
		bool resizable;
		union Window or View context;
		new ( Rect rect );
		void zoomIn ( View view );
		void zoomRestore ( View view );
		{abstract} void event ( View view, Event ev );
	}
	class Label {
		char *text;
		new ( char *text, int size );
	}
	class Image {
		new ( char *path );
	}
	class Button {
		Label label;
		Image image;
		void (*f) (Button button);
		new ( void (*f) (Button button) );
	}
	class Container {
		addView ( View view );
	}
	class Game {
		bool board [h][w];
		Block active;
	}
	class Block {
		rotate ( direction );
	}
}

Object --* Class

List --|> Object
Stack --|> Object

GUIObj --|> Class

Event --|> Object
MouseEvent --|> Event
KeyboardEvent --|> Event

Window --* GUIObj
Window --|> Object
View --* GUIObj
View --|> Object

Game --|> View
Block --|> View
Container	--|> View

Label --|> View
Button --|> View
Image --|> View

@enduml
